//ZonedDateTimeの利用
import java.time.*;

public class Main{
  public static void main(String[] args){
    //Instantの生成
    Instant i1 = Instant.now();
    //Instantとlong値との相互交換
    Instant i2 = Instant.ofEpochMilli(1600705425827L);
    long l = i2.toEpochMilli();

    //ZonedDateTimeの生成
    ZonedDateTime z1 = ZonedDateTime.now();
    ZonedDateTime z2 = ZonedDateTime.of(2020, 1, 2, 3, 4, 5, 6, ZoneId.of("Asia/Tokyo"));

    //InstantとZonedDateTimeの相互変換
    Instant i3 = z2.toInstant();
    ZonedDateTime z3 = i3.atZone(ZoneId.of("Europe/London"));

    //ZonedDateTimeの利用方法
    System.out.println("東京:" + z2.getYear() + z2.getMonth() + z2.getDayOfMonth());
    System.out.println("ロンドン:" + z3.getYear() + z3.getMonth() + z3.getDayOfMonth());
    if(z2.isEqual(z3)){//同じ瞬間の判定はEqualsでなくisEqualsを使用する。
      System.out.println("これらは同じ瞬間を指しています。");
    }
  }
}

import java.time.*;

public class Main{
  public static void main(String[] args){
    //LocalDateTimeの生成方法
    LocalDateTime l1 = LocalDateTime.now();
    LocalDateTime l2 = LocalDateTime.of(2020, 1, 1, 9, 5, 0, 0);

    //LocalDateTimeとZoneDateTimeの相互変換
    ZonedDateTime z1 = l2.atZone(ZoneId.of("Europe/London"));
    LocalDateTime l3 = z1.toLocalDateTime();

    System.out.println("ロンドン:" + l3.getYear() + l3.getMonth() + l3.getDayOfMonth() + "st" + l2.getHour() + "時" + l2.getMinute() + "分");
  } 
}

//日時クラスのメソッド利用例
import java.time.*;
import java.time.format.*;

public class Main{
  public static void main(String[] args){
    //文字列からLocalDateを生成
    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy/MM/dd");
    LocalDate ldate = LocalDate.parse("2020/09/22", fmt);

    //1000日後を計算する
    LocalDate ldatep = ldate.plusDays(1000);
    String str = ldatep.format(fmt);
    System.out.println("1000日後は" + str);

    //現在の日付との比較
    LocalDate now = LocalDate.now();
    if(now.isAfter(ldatep)){
      System.out.println("1000日後は過去日付です。");
    }
  }  
}

//periodクラスの利用例
import java.time.*;

public class Main{
  public static void main(String[] args){
    LocalDate d1 = LocalDate.of(2020,1,1);
    LocalDate d2 = LocalDate.of(2020,1,4);

    //3日間をあ表すperiodを２通りの方法で生成
    Period p1 = Period.ofDays(3);
    Period p2 = Period.between(d1, d2);

    //d2のさらに3日後を計算する
    LocalDate d3 = d2.plus(p2);

    System.out.println(d3);
  }
}
