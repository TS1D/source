LinkedHashSet : 値を格納した順序に配列

TreeSet : 自然順序付けで整列
import java.util.Set;
import java.util.TreeSet;

public class Main{
  public static void  main(String[] args){
    Set<String> words = new TreeSet<String>();
    words.add("dog");
    words.add("cat");
    words.add("wolf");
    words.add("panda");
    for(String s : words) {
      System.out.print(s + "→");
    }
  }
}

import java.util.HashSet;
import java.util.Set;

public class Main{
  public static void main(String[] args){
    Set<String> colors = new HashSet<String>();
    colors.add("red");
    colors.add("blue");
    colors.add("Yellow");
    colors.add("red");//equalsで等価と判断される。
    colors.add("brown");
    System.out.println("色は" + colors.size() + "種類");
  }
}

import java.util.HashSet;
import java.util.Set;

public class Main{
  public static void main(String[] args){
    Set<String> colors = new HashSet<String>();
    colors.add("red");
    colors.add("blue");
    colors.add("Yellow");
    colors.add("red");
    colors.add("brown");
    for(String s : colors){
      System.out.print(s + "→");
    }
  }
}
